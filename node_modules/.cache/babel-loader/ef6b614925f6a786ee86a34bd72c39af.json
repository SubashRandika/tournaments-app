{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Challenges\\\\BAYES\\\\tournaments-app\\\\src\\\\containers\\\\TournamentsView\\\\TournamentsView.js\";\nimport React, { Component } from 'react';\nimport Auxiliary from '../../hoc/Auxiliary';\nimport TournamentsList from '../../components/TournamentsList/TournamentsList';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\nimport jsonServerConfig from '../../configurations/json-server';\n\nclass TournamentsView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllTournamentsService = () => {\n      axios.get(this.tournamentsUrl).then(res => {\n        const tournaments = res.data;\n        this.setState({\n          tournaments: tournaments,\n          isLoaded: true\n        });\n      }).catch(err => {\n        this.setState({\n          errorMessage: 'Error occurred while loading tournaments.',\n          isLoaded: true\n        });\n      }).b;\n    };\n\n    const host = jsonServerConfig.host,\n          port = jsonServerConfig.port;\n    this.url = \"http://\".concat(host, \":\").concat(port);\n    this.tournamentsUrl = \"\".concat(this.url, \"/tournaments\");\n    this.state = {\n      tournaments: [],\n      isLoaded: false,\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state);\n    this.getAllTournamentsService();\n  }\n\n  render() {\n    let retrievedTournaments = React.createElement(TournamentsList, {\n      tournaments: this.state.tournaments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n\n    if (this.state.tournaments) {\n      retrievedTournaments = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"There is no tournaments to load.\")));\n    }\n\n    if (this.state.errorMessage) {\n      retrievedTournaments = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.errorMessage)));\n    }\n\n    return React.createElement(Auxiliary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, retrievedTournaments);\n  }\n\n}\n\nexport default TournamentsView;","map":{"version":3,"sources":["D:\\Coding Challenges\\BAYES\\tournaments-app\\src\\containers\\TournamentsView\\TournamentsView.js"],"names":["React","Component","Auxiliary","TournamentsList","Paper","Typography","axios","jsonServerConfig","TournamentsView","constructor","props","getAllTournamentsService","get","tournamentsUrl","then","res","tournaments","data","setState","isLoaded","catch","err","errorMessage","b","host","port","url","state","componentDidMount","console","log","render","retrievedTournaments"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;;AAEA,MAAMC,eAAN,SAA8BP,SAA9B,CAAwC;AACvCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAmBnBC,wBAnBmB,GAmBQ,MAAM;AAChCL,MAAAA,KAAK,CACHM,GADF,CACM,KAAKC,cADX,EAEEC,IAFF,CAEQC,GAAD,IAAS;AACd,cAAMC,WAAW,GAAGD,GAAG,CAACE,IAAxB;AACA,aAAKC,QAAL,CAAc;AACbF,UAAAA,WAAW,EAAEA,WADA;AAEbG,UAAAA,QAAQ,EAAE;AAFG,SAAd;AAIA,OARF,EASEC,KATF,CASSC,GAAD,IAAS;AACf,aAAKH,QAAL,CAAc;AACbI,UAAAA,YAAY,EAAE,2CADD;AAEbH,UAAAA,QAAQ,EAAE;AAFG,SAAd;AAIA,OAdF,EAcII,CAdJ;AAeA,KAnCkB;;AAAA,UAGVC,IAHU,GAGKjB,gBAHL,CAGViB,IAHU;AAAA,UAGJC,IAHI,GAGKlB,gBAHL,CAGJkB,IAHI;AAIlB,SAAKC,GAAL,oBAAqBF,IAArB,cAA6BC,IAA7B;AACA,SAAKZ,cAAL,aAAyB,KAAKa,GAA9B;AAEA,SAAKC,KAAL,GAAa;AACZX,MAAAA,WAAW,EAAE,EADD;AAEZG,MAAAA,QAAQ,EAAE,KAFE;AAGZG,MAAAA,YAAY,EAAE;AAHF,KAAb;AAKA;;AAEDM,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACA,SAAKhB,wBAAL;AACA;;AAoBDoB,EAAAA,MAAM,GAAG;AACR,QAAIC,oBAAoB,GAAG,oBAAC,eAAD;AAAiB,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWX,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B;;AAEA,QAAI,KAAKW,KAAL,CAAWX,WAAf,EAA4B;AAC3BgB,MAAAA,oBAAoB,GACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADD,CADD,CADD;AAOA;;AAED,QAAI,KAAKL,KAAL,CAAWL,YAAf,EAA6B;AAC5BU,MAAAA,oBAAoB,GACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B,KAAKL,KAAL,CAAWL,YAAtC,CADD,CADD,CADD;AAOA;;AAED,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYU,oBAAZ,CAAP;AACA;;AA9DsC;;AAiExC,eAAexB,eAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Auxiliary from '../../hoc/Auxiliary';\r\nimport TournamentsList from '../../components/TournamentsList/TournamentsList';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nimport jsonServerConfig from '../../configurations/json-server';\r\n\r\nclass TournamentsView extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst { host, port } = jsonServerConfig;\r\n\t\tthis.url = `http://${host}:${port}`;\r\n\t\tthis.tournamentsUrl = `${this.url}/tournaments`;\r\n\r\n\t\tthis.state = {\r\n\t\t\ttournaments: [],\r\n\t\t\tisLoaded: false,\r\n\t\t\terrorMessage: ''\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log(this.state);\r\n\t\tthis.getAllTournamentsService();\r\n\t}\r\n\r\n\tgetAllTournamentsService = () => {\r\n\t\taxios\r\n\t\t\t.get(this.tournamentsUrl)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst tournaments = res.data;\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttournaments: tournaments,\r\n\t\t\t\t\tisLoaded: true\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terrorMessage: 'Error occurred while loading tournaments.',\r\n\t\t\t\t\tisLoaded: true\r\n\t\t\t\t});\r\n\t\t\t}).b;\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet retrievedTournaments = <TournamentsList tournaments={this.state.tournaments} />;\r\n\r\n\t\tif (this.state.tournaments) {\r\n\t\t\tretrievedTournaments = (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Paper>\r\n\t\t\t\t\t\t<Typography component='p'>There is no tournaments to load.</Typography>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (this.state.errorMessage) {\r\n\t\t\tretrievedTournaments = (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Paper>\r\n\t\t\t\t\t\t<Typography component='p'>{this.state.errorMessage}</Typography>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn <Auxiliary>{retrievedTournaments}</Auxiliary>;\r\n\t}\r\n}\r\n\r\nexport default TournamentsView;\r\n"]},"metadata":{},"sourceType":"module"}