{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Challenges\\\\BAYES\\\\tournaments-app\\\\src\\\\hoc\\\\withTournamentsData.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport jsonServerConfig from '../configurations/json-server';\n\nconst withTournamentsData = WrappedComponent => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(props) {\n      super(props);\n\n      this.getAllTournaments = () => {\n        axios.get(this.tournamentsUrl).then(res => {\n          this.setState({\n            tournaments: res.data,\n            isLoaded: true\n          });\n        }).catch(err => {\n          this.setState({\n            errorMessage: 'Error occurred while loading tournaments...',\n            isLoaded: true\n          });\n        });\n      };\n\n      this.getTournamentById = tournamentId => {\n        const tournamentUrl = \"\".concat(this.tournamentsUrl, \"/\").concat(tournamentId);\n        axios.get(tournamentUrl).then(res => {\n          this.setState({\n            tournaments: res.data,\n            isLoaded: true\n          });\n        }).catch(err => {\n          this.setState({\n            errorMessage: 'Error loading tournament: ' + tournamentId,\n            isLoaded: true\n          });\n        });\n      };\n\n      this.getFilteredTournaments = (filterField, inputValue) => {\n        const filterUrl = \"\".concat(this.tournamentsUrl, \"?series.\").concat(filterField, \"_like=\").concat(inputValue);\n        axios.get(filterUrl).then(res => {\n          this.setState({\n            tournaments: res.data,\n            isLoaded: true\n          });\n        }).catch(err => {\n          this.setState({\n            errorMessage: 'Error when filtering tournaments...',\n            isLoaded: true\n          });\n        });\n      };\n\n      const host = jsonServerConfig.host,\n            port = jsonServerConfig.port;\n      this.url = \"http://\".concat(host, \":\").concat(port);\n      this.tournamentsUrl = \"\".concat(this.url, \"/tournaments\");\n      this.state = {\n        tournaments: [],\n        isLoaded: false,\n        errorMessage: ''\n      };\n      console.log(this.props);\n    }\n\n    render() {\n      return React.createElement(WrappedComponent, {\n        getAllTournaments: this.getAllTournaments,\n        getTournamentById: tournamentId => this.getTournamentById(tournamentId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    }\n\n  }, _temp;\n};\n\nexport default withTournamentsData;","map":{"version":3,"sources":["D:\\Coding Challenges\\BAYES\\tournaments-app\\src\\hoc\\withTournamentsData.js"],"names":["React","Component","axios","jsonServerConfig","withTournamentsData","WrappedComponent","constructor","props","getAllTournaments","get","tournamentsUrl","then","res","setState","tournaments","data","isLoaded","catch","err","errorMessage","getTournamentById","tournamentId","tournamentUrl","getFilteredTournaments","filterField","inputValue","filterUrl","host","port","url","state","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;AAEA,MAAMC,mBAAmB,GAAIC,gBAAD,IAAsB;AAAA;;AACjD,iBAAO,cAAcJ,SAAd,CAAwB;AAC9BK,IAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,YAAMA,KAAN;;AADkB,WAenBC,iBAfmB,GAeC,MAAM;AACzBN,QAAAA,KAAK,CACHO,GADF,CACM,KAAKC,cADX,EAEEC,IAFF,CAEQC,GAAD,IAAS;AACd,eAAKC,QAAL,CAAc;AACbC,YAAAA,WAAW,EAAEF,GAAG,CAACG,IADJ;AAEbC,YAAAA,QAAQ,EAAE;AAFG,WAAd;AAIA,SAPF,EAQEC,KARF,CAQSC,GAAD,IAAS;AACf,eAAKL,QAAL,CAAc;AACbM,YAAAA,YAAY,EAAE,6CADD;AAEbH,YAAAA,QAAQ,EAAE;AAFG,WAAd;AAIA,SAbF;AAcA,OA9BkB;;AAAA,WAgCnBI,iBAhCmB,GAgCEC,YAAD,IAAkB;AACrC,cAAMC,aAAa,aAAM,KAAKZ,cAAX,cAA6BW,YAA7B,CAAnB;AACAnB,QAAAA,KAAK,CACHO,GADF,CACMa,aADN,EAEEX,IAFF,CAEQC,GAAD,IAAS;AACd,eAAKC,QAAL,CAAc;AACbC,YAAAA,WAAW,EAAEF,GAAG,CAACG,IADJ;AAEbC,YAAAA,QAAQ,EAAE;AAFG,WAAd;AAIA,SAPF,EAQEC,KARF,CAQSC,GAAD,IAAS;AACf,eAAKL,QAAL,CAAc;AACbM,YAAAA,YAAY,EAAE,+BAA+BE,YADhC;AAEbL,YAAAA,QAAQ,EAAE;AAFG,WAAd;AAIA,SAbF;AAcA,OAhDkB;;AAAA,WAkDnBO,sBAlDmB,GAkDM,CAACC,WAAD,EAAcC,UAAd,KAA6B;AACrD,cAAMC,SAAS,aAAM,KAAKhB,cAAX,qBAAoCc,WAApC,mBAAwDC,UAAxD,CAAf;AACAvB,QAAAA,KAAK,CACHO,GADF,CACMiB,SADN,EAEEf,IAFF,CAEQC,GAAD,IAAS;AACd,eAAKC,QAAL,CAAc;AACbC,YAAAA,WAAW,EAAEF,GAAG,CAACG,IADJ;AAEbC,YAAAA,QAAQ,EAAE;AAFG,WAAd;AAIA,SAPF,EAQEC,KARF,CAQSC,GAAD,IAAS;AACf,eAAKL,QAAL,CAAc;AACbM,YAAAA,YAAY,EAAE,qCADD;AAEbH,YAAAA,QAAQ,EAAE;AAFG,WAAd;AAIA,SAbF;AAcA,OAlEkB;;AAAA,YAGVW,IAHU,GAGKxB,gBAHL,CAGVwB,IAHU;AAAA,YAGJC,IAHI,GAGKzB,gBAHL,CAGJyB,IAHI;AAIlB,WAAKC,GAAL,oBAAqBF,IAArB,cAA6BC,IAA7B;AACA,WAAKlB,cAAL,aAAyB,KAAKmB,GAA9B;AAEA,WAAKC,KAAL,GAAa;AACZhB,QAAAA,WAAW,EAAE,EADD;AAEZE,QAAAA,QAAQ,EAAE,KAFE;AAGZG,QAAAA,YAAY,EAAE;AAHF,OAAb;AAKAY,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAjB;AACA;;AAuDD0B,IAAAA,MAAM,GAAG;AACR,aACC,oBAAC,gBAAD;AACC,QAAA,iBAAiB,EAAE,KAAKzB,iBADzB;AAEC,QAAA,iBAAiB,EAAGa,YAAD,IAAkB,KAAKD,iBAAL,CAAuBC,YAAvB,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAMA;;AA5E6B,GAA/B;AA8EA,CA/ED;;AAiFA,eAAejB,mBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport jsonServerConfig from '../configurations/json-server';\r\n\r\nconst withTournamentsData = (WrappedComponent) => {\r\n\treturn class extends Component {\r\n\t\tconstructor(props) {\r\n\t\t\tsuper(props);\r\n\r\n\t\t\tconst { host, port } = jsonServerConfig;\r\n\t\t\tthis.url = `http://${host}:${port}`;\r\n\t\t\tthis.tournamentsUrl = `${this.url}/tournaments`;\r\n\r\n\t\t\tthis.state = {\r\n\t\t\t\ttournaments: [],\r\n\t\t\t\tisLoaded: false,\r\n\t\t\t\terrorMessage: ''\r\n\t\t\t};\r\n\t\t\tconsole.log(this.props);\r\n\t\t}\r\n\r\n\t\tgetAllTournaments = () => {\r\n\t\t\taxios\r\n\t\t\t\t.get(this.tournamentsUrl)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\ttournaments: res.data,\r\n\t\t\t\t\t\tisLoaded: true\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terrorMessage: 'Error occurred while loading tournaments...',\r\n\t\t\t\t\t\tisLoaded: true\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\tgetTournamentById = (tournamentId) => {\r\n\t\t\tconst tournamentUrl = `${this.tournamentsUrl}/${tournamentId}`;\r\n\t\t\taxios\r\n\t\t\t\t.get(tournamentUrl)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\ttournaments: res.data,\r\n\t\t\t\t\t\tisLoaded: true\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terrorMessage: 'Error loading tournament: ' + tournamentId,\r\n\t\t\t\t\t\tisLoaded: true\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\tgetFilteredTournaments = (filterField, inputValue) => {\r\n\t\t\tconst filterUrl = `${this.tournamentsUrl}?series.${filterField}_like=${inputValue}`;\r\n\t\t\taxios\r\n\t\t\t\t.get(filterUrl)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\ttournaments: res.data,\r\n\t\t\t\t\t\tisLoaded: true\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terrorMessage: 'Error when filtering tournaments...',\r\n\t\t\t\t\t\tisLoaded: true\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\trender() {\r\n\t\t\treturn (\r\n\t\t\t\t<WrappedComponent\r\n\t\t\t\t\tgetAllTournaments={this.getAllTournaments}\r\n\t\t\t\t\tgetTournamentById={(tournamentId) => this.getTournamentById(tournamentId)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport default withTournamentsData;\r\n"]},"metadata":{},"sourceType":"module"}