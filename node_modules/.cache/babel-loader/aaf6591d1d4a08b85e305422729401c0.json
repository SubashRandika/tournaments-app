{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport PropTypes from 'prop-types';\nimport { getRotates, getFlips, getSizes } from '../functions/props';\nimport { AddNoExtraPropsValidator, AddThemeStylesValidator } from '../functions/propTypes';\nvar FlagIconSizeType = PropTypes.oneOf(getSizes());\nvar FlagIconRotateType = PropTypes.oneOf(getRotates());\nvar FlagIconFlipType = PropTypes.oneOf(getFlips());\n\nvar makeFlagIconCodeType = function makeFlagIconCodeType(codes) {\n  return PropTypes.oneOf(codes);\n};\n\nvar makeFlagIconClassesObject = function makeFlagIconClassesObject(codes) {\n  return {\n    code: makeFlagIconCodeType(codes).isRequired,\n    size: FlagIconSizeType,\n    squared: PropTypes.bool,\n    rotate: FlagIconRotateType,\n    flip: FlagIconFlipType,\n    className: PropTypes.string,\n    styleName: PropTypes.string\n  };\n};\n\nvar makeFlagIconPropsTypeObject = function makeFlagIconPropsTypeObject(codes) {\n  return _objectSpread({}, makeFlagIconClassesObject(codes), {\n    children: PropTypes.element,\n    Component: PropTypes.string\n  });\n};\n\nexport var MakeFlagIconPropsType = function MakeFlagIconPropsType(codes) {\n  return AddNoExtraPropsValidator(makeFlagIconPropsTypeObject(codes));\n};\nvar flagIconOptionsType = {\n  customCodes: PropTypes.object,\n  themeStyles: PropTypes.object,\n  useCssModules: PropTypes.bool\n};\nexport var MakeFlagIconOptionsPropType = function MakeFlagIconOptionsPropType() {\n  return AddNoExtraPropsValidator(AddThemeStylesValidator(flagIconOptionsType));\n};","map":null,"metadata":{},"sourceType":"module"}