{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Challenges\\\\BAYES\\\\tournaments-app\\\\src\\\\components\\\\TournamentsList\\\\TournamentsListItemDetail\\\\SeriesDetails\\\\SeriesDetails.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport DateRange from '@material-ui/icons/DateRange';\nimport dateformat from 'dateformat';\nconst seriesStyles = makeStyles({\n  card: {\n    minWidth: 250\n  }\n});\nconst typoStyles = makeStyles({\n  title: {\n    fontSize: 14\n  }\n});\nconst dividerStyles = {\n  backgroundColor: '#448ad4',\n  margin: '5px 0',\n  height: 1.5\n};\n\nconst SeriesDetails = props => {\n  const seriesClasses = seriesStyles();\n  const typoClasses = typoStyles();\n  const DATE_FORMAT = 'dddd, mmmm dS, yyyy';\n  return React.createElement(Card, {\n    className: seriesClasses.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.seriesDetails.name), React.createElement(Divider, {\n    style: dividerStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: typoClasses.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Start Date\"), React.createElement(Chip, {\n    label: dateformat(props.seriesDetails.date_start, DATE_FORMAT),\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: typoClasses.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"End Date\"), React.createElement(Chip, {\n    label: dateformat(props.seriesDetails.date_end, DATE_FORMAT),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))))));\n};\n\nexport default SeriesDetails;","map":{"version":3,"sources":["D:\\Coding Challenges\\BAYES\\tournaments-app\\src\\components\\TournamentsList\\TournamentsListItemDetail\\SeriesDetails\\SeriesDetails.js"],"names":["React","makeStyles","Card","CardContent","Typography","Divider","Grid","Chip","DateRange","dateformat","seriesStyles","card","minWidth","typoStyles","title","fontSize","dividerStyles","backgroundColor","margin","height","SeriesDetails","props","seriesClasses","typoClasses","DATE_FORMAT","seriesDetails","name","date_start","date_end"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport DateRange from '@material-ui/icons/DateRange';\r\nimport dateformat from 'dateformat';\r\n\r\nconst seriesStyles = makeStyles({\r\n\tcard: {\r\n\t\tminWidth: 250\r\n\t}\r\n});\r\n\r\nconst typoStyles = makeStyles({\r\n\ttitle: {\r\n\t\tfontSize: 14\r\n\t}\r\n});\r\n\r\nconst dividerStyles = {\r\n\tbackgroundColor: '#448ad4',\r\n\tmargin: '5px 0',\r\n\theight: 1.5\r\n};\r\n\r\nconst SeriesDetails = (props) => {\r\n\tconst seriesClasses = seriesStyles();\r\n\tconst typoClasses = typoStyles();\r\n\tconst DATE_FORMAT = 'dddd, mmmm dS, yyyy';\r\n\r\n\treturn (\r\n\t\t<Card className={seriesClasses.card}>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Typography variant='h6' component='h2'>\r\n\t\t\t\t\t{props.seriesDetails.name}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Divider style={dividerStyles} />\r\n\t\t\t\t<Typography variant='body2' component='p'>\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t<Typography className={typoClasses.title} color='textSecondary' gutterBottom>\r\n\t\t\t\t\t\t\t\tStart Date\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Chip label={dateformat(props.seriesDetails.date_start, DATE_FORMAT)} color='primary' />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t<Typography className={typoClasses.title} color='textSecondary' gutterBottom>\r\n\t\t\t\t\t\t\t\tEnd Date\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Chip label={dateformat(props.seriesDetails.date_end, DATE_FORMAT)} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default SeriesDetails;\r\n"]},"metadata":{},"sourceType":"module"}