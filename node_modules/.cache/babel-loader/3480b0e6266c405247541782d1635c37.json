{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Challenges\\\\BAYES\\\\tournaments-app\\\\src\\\\components\\\\TournamentsList\\\\TournamentsListItemDetail\\\\TournamentDetails\\\\TournamentDetails.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport DateRange from '@material-ui/icons/DateRange';\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport dateformat from 'dateformat';\nconst seriesStyles = makeStyles({\n  card: {\n    minWidth: 250\n  }\n});\nconst typoStyles = makeStyles({\n  title: {\n    fontSize: 14\n  }\n});\nconst dividerStyles = {\n  backgroundColor: '#448ad4',\n  margin: '5px 0',\n  height: 2\n};\n\nconst TournamentDetails = props => {\n  const seriesClasses = seriesStyles();\n  const typoClasses = typoStyles();\n  const DATE_FORMAT = 'ddd, mmm dS, yyyy';\n\n  const extractAndFormatDateTime = dateTimeString => {\n    const dateTimeArray = dateTimeString.split('Z');\n    return dateformat(dateTimeArray[0], DATE_FORMAT);\n  };\n\n  return React.createElement(Card, {\n    className: seriesClasses.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    style: dividerStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: typoClasses.title,\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Start Date\"), React.createElement(Chip, {\n    label: extractAndFormatDateTime(props.tournamentDetails.date_end),\n    color: \"primary\",\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(DateRange, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: typoClasses.title,\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"End Date\"), React.createElement(Chip, {\n    label: extractAndFormatDateTime(props.tournamentDetails.date_end),\n    color: \"secondary\",\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(DateRange, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))))));\n};\n\nexport default TournamentDetails;","map":{"version":3,"sources":["D:\\Coding Challenges\\BAYES\\tournaments-app\\src\\components\\TournamentsList\\TournamentsListItemDetail\\TournamentDetails\\TournamentDetails.js"],"names":["React","makeStyles","Card","CardContent","Typography","Divider","Grid","Chip","Avatar","DateRange","LocationOn","dateformat","seriesStyles","card","minWidth","typoStyles","title","fontSize","dividerStyles","backgroundColor","margin","height","TournamentDetails","props","seriesClasses","typoClasses","DATE_FORMAT","extractAndFormatDateTime","dateTimeString","dateTimeArray","split","tournamentDetails","date_end"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DateRange from '@material-ui/icons/DateRange';\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport dateformat from 'dateformat';\r\n\r\nconst seriesStyles = makeStyles({\r\n\tcard: {\r\n\t\tminWidth: 250\r\n\t}\r\n});\r\n\r\nconst typoStyles = makeStyles({\r\n\ttitle: {\r\n\t\tfontSize: 14\r\n\t}\r\n});\r\n\r\nconst dividerStyles = {\r\n\tbackgroundColor: '#448ad4',\r\n\tmargin: '5px 0',\r\n\theight: 2\r\n};\r\n\r\nconst TournamentDetails = (props) => {\r\n\tconst seriesClasses = seriesStyles();\r\n\tconst typoClasses = typoStyles();\r\n\tconst DATE_FORMAT = 'ddd, mmm dS, yyyy';\r\n\r\n\tconst extractAndFormatDateTime = (dateTimeString) => {\r\n\t\tconst dateTimeArray = dateTimeString.split('Z');\r\n\t\treturn dateformat(dateTimeArray[0], DATE_FORMAT);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card className={seriesClasses.card}>\r\n\t\t\t<CardContent>\r\n\t\t\t\t{/* <Grid container spacing={2}>\r\n\t\t\t\t\t<Grid item md={1} xs={2}>\r\n\t\t\t\t\t\t<LocationOn />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item md={11} xs={10}>\r\n\t\t\t\t\t\t<Typography variant='h6' component='h2'>\r\n\t\t\t\t\t\t\t{props.tournamentDetails.country}, {props.tournamentDetails.city}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid> */}\r\n\t\t\t\t<Divider style={dividerStyles} />\r\n\t\t\t\t<Typography variant='body2' component='span'>\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t<Typography className={typoClasses.title} color='textSecondary'>\r\n\t\t\t\t\t\t\t\tStart Date\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\tlabel={extractAndFormatDateTime(props.tournamentDetails.date_end)}\r\n\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t<Avatar>\r\n\t\t\t\t\t\t\t\t\t\t<DateRange />\r\n\t\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t<Typography className={typoClasses.title} color='textSecondary'>\r\n\t\t\t\t\t\t\t\tEnd Date\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\tlabel={extractAndFormatDateTime(props.tournamentDetails.date_end)}\r\n\t\t\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t<Avatar>\r\n\t\t\t\t\t\t\t\t\t\t<DateRange />\r\n\t\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default TournamentDetails;\r\n"]},"metadata":{},"sourceType":"module"}