{"ast":null,"code":"import _slicedToArray from \"D:\\\\Coding Challenges\\\\BAYES\\\\tournaments-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Coding Challenges\\\\BAYES\\\\tournaments-app\\\\src\\\\components\\\\TournamentsList\\\\TournamentsList.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Grow from '@material-ui/core/Grow';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TournamentsListItemDetail from './TournamentsListItemDetail/TournamentsListItemDetail';\nimport Avatar from '@material-ui/core/Avatar';\nimport FlagIconFactory from 'react-flag-icon-css';\nconst expansionPanelStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    margin: theme.spacing(6, 0)\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\nconst paperStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2, 2)\n  }\n}));\nconst spinnerStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '500px'\n  },\n  progress: {\n    margin: theme.spacing(2)\n  }\n}));\nconst FlagIcon = FlagIconFactory(React, {\n  useCssModules: false\n});\n\nconst TournamentsList = props => {\n  const expansionPanelClasses = expansionPanelStyles();\n  const paperClasses = paperStyles();\n  const spinnerClasses = spinnerStyles();\n\n  const _React$useState = React.useState('panel1'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        expanded = _React$useState2[0],\n        setExpanded = _React$useState2[1];\n\n  const handleChange = panel => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  let tournamentList = props.tournamentState.tournaments.map(tournament => {\n    return React.createElement(Grow, Object.assign({\n      in: props.tournamentState.isLoaded\n    }, props.tournamentState.isLoaded ? {\n      timeout: 2000\n    } : {}, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(ExpansionPanel, {\n      key: tournament.id,\n      expanded: expanded === tournament.name,\n      onChange: handleChange(tournament.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      expandIcon: React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }),\n      \"aria-controls\": \"panel1a-content\",\n      id: \"panel1a-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(FlagIcon, {\n      code: tournament.country.toLowerCase(),\n      size: \"2x\",\n      sqaure: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: expansionPanelClasses.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, tournament.name)), React.createElement(TournamentsListItemDetail, {\n      tournamentDetails: tournament,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  });\n\n  if (props.tournamentState.errorMessage) {\n    tournamentList = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: paperClasses.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Sorry unable get tournament data not...\")));\n  }\n\n  if (!props.tournamentState.isLoaded) {\n    tournamentList = React.createElement(\"div\", {\n      className: spinnerClasses.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      className: spinnerClasses.progress,\n      size: 100,\n      thickness: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: expansionPanelClasses.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, tournamentList);\n};\n\nexport default TournamentsList;","map":{"version":3,"sources":["D:\\Coding Challenges\\BAYES\\tournaments-app\\src\\components\\TournamentsList\\TournamentsList.js"],"names":["React","makeStyles","ExpansionPanel","ExpansionPanelSummary","Grow","Typography","ExpandMoreIcon","Paper","CircularProgress","TournamentsListItemDetail","Avatar","FlagIconFactory","expansionPanelStyles","theme","root","width","height","margin","spacing","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","paperStyles","padding","spinnerStyles","display","flexDirection","alignItems","justifyContent","progress","FlagIcon","useCssModules","TournamentsList","props","expansionPanelClasses","paperClasses","spinnerClasses","useState","expanded","setExpanded","handleChange","panel","event","newExpanded","tournamentList","tournamentState","tournaments","map","tournament","isLoaded","timeout","id","name","country","toLowerCase","errorMessage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TournamentsListItemDetail from './TournamentsListItemDetail/TournamentsListItemDetail';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FlagIconFactory from 'react-flag-icon-css';\r\n\r\nconst expansionPanelStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tmargin: theme.spacing(6, 0)\r\n\t},\r\n\theading: {\r\n\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\tfontWeight: theme.typography.fontWeightRegular\r\n\t}\r\n}));\r\n\r\nconst paperStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpadding: theme.spacing(2, 2)\r\n\t}\r\n}));\r\n\r\nconst spinnerStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\theight: '500px'\r\n\t},\r\n\tprogress: {\r\n\t\tmargin: theme.spacing(2)\r\n\t}\r\n}));\r\n\r\nconst FlagIcon = FlagIconFactory(React, { useCssModules: false });\r\n\r\nconst TournamentsList = (props) => {\r\n\tconst expansionPanelClasses = expansionPanelStyles();\r\n\tconst paperClasses = paperStyles();\r\n\tconst spinnerClasses = spinnerStyles();\r\n\r\n\tconst [expanded, setExpanded] = React.useState('panel1');\r\n\tconst handleChange = (panel) => (event, newExpanded) => {\r\n\t\tsetExpanded(newExpanded ? panel : false);\r\n\t};\r\n\r\n\tlet tournamentList = props.tournamentState.tournaments.map((tournament) => {\r\n\t\treturn (\r\n\t\t\t<Grow in={props.tournamentState.isLoaded} {...(props.tournamentState.isLoaded ? { timeout: 2000 } : {})}>\r\n\t\t\t\t<ExpansionPanel\r\n\t\t\t\t\tkey={tournament.id}\r\n\t\t\t\t\texpanded={expanded === tournament.name}\r\n\t\t\t\t\tonChange={handleChange(tournament.name)}>\r\n\t\t\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} aria-controls='panel1a-content' id='panel1a-header'>\r\n\t\t\t\t\t\t<FlagIcon code={tournament.country.toLowerCase()} size='2x' sqaure/>\r\n\t\t\t\t\t\t<Typography className={expansionPanelClasses.heading}>{tournament.name}</Typography>\r\n\t\t\t\t\t</ExpansionPanelSummary>\r\n\t\t\t\t\t<TournamentsListItemDetail tournamentDetails={tournament} />\r\n\t\t\t\t</ExpansionPanel>\r\n\t\t\t</Grow>\r\n\t\t);\r\n\t});\r\n\r\n\tif (props.tournamentState.errorMessage) {\r\n\t\ttournamentList = (\r\n\t\t\t<div>\r\n\t\t\t\t<Paper className={paperClasses.root}>\r\n\t\t\t\t\t<Typography component='p'>Sorry unable get tournament data not...</Typography>\r\n\t\t\t\t</Paper>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (!props.tournamentState.isLoaded) {\r\n\t\ttournamentList = (\r\n\t\t\t<div className={spinnerClasses.root}>\r\n\t\t\t\t<CircularProgress className={spinnerClasses.progress} size={100} thickness={4} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn <div className={expansionPanelClasses.root}>{tournamentList}</div>;\r\n};\r\n\r\nexport default TournamentsList;\r\n"]},"metadata":{},"sourceType":"module"}